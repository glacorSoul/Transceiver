import{_ as s,c as a,a3 as i,o as t}from"./chunks/framework.CG6b9oel.js";const k=JSON.parse('{"title":"Code Generation","description":"","frontmatter":{},"headers":[],"relativePath":"guide/codeGen.md","filePath":"guide/codeGen.md"}'),n={name:"guide/codeGen.md"};function r(o,e,l,p,c,h){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="code-generation" tabindex="-1">Code Generation <a class="header-anchor" href="#code-generation" aria-label="Permalink to &quot;Code Generation&quot;">â€‹</a></h1><p><code>Transceiver</code> allows to generate code for requests and response models from a server, so you do not have to share Dlls! In order to use code generation you can install the package <a href="https://www.nuget.org/packages/Transceiver.Generator" target="_blank" rel="noreferrer">Transceiver.Generator</a>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Transceiver.Generator</span></span></code></pre></div><p>Code generation generates the models from a json specification file. This file can be retrieved using <a href="https://github.com/glacorSoul/Transceiver/tree/main/Transceiver.ServiceDiscoverer" target="_blank" rel="noreferrer">Transceiver.ServiceDiscoverer</a>. If the property is a Dictionary property it must be prefixed by <code>%</code> character. At the moment the only Dictionary type that <code>Transceiver</code> is able to generate is <code>Dictionary&lt;string, object&gt;</code>.</p><p>You can then use the <code>ServiceDiscoveryAttribute</code> on a partial implemented class.</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceDiscovery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;transceiverServices.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> partial</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GeneratedRequests</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,6)]))}const g=s(n,[["render",r]]);export{k as __pageData,g as default};
